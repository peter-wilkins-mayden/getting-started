;; Analyzed by ClojureScript 1.8.51
{:name untangled.client.logging, :doc nil, :excludes #{}, :use-macros nil, :require-macros {cljs.pprint cljs.pprint, om.next om.next}, :uses {*logger* om.next}, :requires {cljs.pprint cljs.pprint, om.next om.next, glog goog.log, goog.log goog.log, level goog.debug.Logger.Level, goog.debug.Logger.Level goog.debug.Logger.Level}, :imports nil, :defs {set-level {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/logging.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([log-level]))}, :name untangled.client.logging/set-level, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/logging.cljs", :end-column 16, :method-params ([log-level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([log-level]))}, value-message {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/logging.cljs", :line 14, :column 7, :end-line 14, :end-column 20, :arglists (quote ([msg val])), :doc "Include a pretty-printed cljs value as a string with the given text message."}, :name untangled.client.logging/value-message, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/logging.cljs", :end-column 20, :method-params ([msg val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg val])), :doc "Include a pretty-printed cljs value as a string with the given text message."}, debug {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/logging.cljs", :line 19, :column 7, :end-line 19, :end-column 12, :arglists (quote ([value] [msg value])), :doc "Print a debug message which includes a value.\n  Returns the value (like identity) so it can be harmlessly nested in expressions.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([value] [msg value]), :arglists ([value] [msg value]), :arglists-meta (nil nil)}}, :name untangled.client.logging/debug, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/logging.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([value] [msg value]), :arglists ([value] [msg value]), :arglists-meta (nil nil)}, :method-params ([value] [msg value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists ([value] [msg value]), :doc "Print a debug message which includes a value.\n  Returns the value (like identity) so it can be harmlessly nested in expressions."}, info {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/logging.cljs", :line 25, :column 7, :end-line 25, :end-column 11, :arglists (quote ([& data])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(data)], :arglists ([& data]), :arglists-meta (nil)}}, :name untangled.client.logging/info, :variadic true, :file "resources/public/js/compiled/dev/untangled/client/logging.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(data)], :arglists ([& data]), :arglists-meta (nil)}, :method-params [(data)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists ([& data])}, warn {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/logging.cljs", :line 28, :column 7, :end-line 28, :end-column 11, :arglists (quote ([& data])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(data)], :arglists ([& data]), :arglists-meta (nil)}}, :name untangled.client.logging/warn, :variadic true, :file "resources/public/js/compiled/dev/untangled/client/logging.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(data)], :arglists ([& data]), :arglists-meta (nil)}, :method-params [(data)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists ([& data])}, error {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/logging.cljs", :line 31, :column 7, :end-line 31, :end-column 12, :arglists (quote ([& data])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(data)], :arglists ([& data]), :arglists-meta (nil)}}, :name untangled.client.logging/error, :variadic true, :file "resources/public/js/compiled/dev/untangled/client/logging.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(data)], :arglists ([& data]), :arglists-meta (nil)}, :method-params [(data)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists ([& data])}}}