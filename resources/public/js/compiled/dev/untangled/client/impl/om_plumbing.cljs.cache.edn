;; Analyzed by ClojureScript 1.8.51
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name untangled.client.impl.om-plumbing, :imports nil, :requires {log untangled.client.logging, i18n untangled.i18n.core, clojure.zip clojure.zip, om.next.impl.parser om.next.impl.parser, async cljs.core.async, cljs.core.async cljs.core.async, untangled.i18n.core untangled.i18n.core, m untangled.client.mutations, util om.util, untangled.client.mutations untangled.client.mutations, op om.next.impl.parser, untangled.client.logging untangled.client.logging, om om.next, om.next om.next, zip clojure.zip, om.util om.util}, :uses nil, :defs {postwalk {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 128, :column 7, :end-line 128, :end-column 15, :arglists (quote ([f form]))}, :name untangled.client.impl.om-plumbing/postwalk, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 15, :method-params ([f form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f form]))}, sweep-missing {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 245, :column 7, :end-line 245, :end-column 20, :arglists (quote ([result]))}, :name untangled.client.impl.om-plumbing/sweep-missing, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 20, :method-params ([result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([result]))}, add-meta-to-recursive-queries {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 134, :column 7, :end-line 134, :end-column 36, :arglists (quote ([q]))}, :name untangled.client.impl.om-plumbing/add-meta-to-recursive-queries, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 36, :method-params ([q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([q]))}, rewrite-tempids-in-request-queue {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 63, :column 7, :end-line 63, :end-column 39, :arglists (quote ([queue tempid-map])), :doc "Rewrite any pending requests in the request queue to account for the fact that a response might have\n  changed ids that are expressed in the mutations of that queue. tempid-map MUST be a map from om\n  tempid to real ids, not idents."}, :name untangled.client.impl.om-plumbing/rewrite-tempids-in-request-queue, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 39, :method-params ([queue tempid-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([queue tempid-map])), :doc "Rewrite any pending requests in the request queue to account for the fact that a response might have\n  changed ids that are expressed in the mutations of that queue. tempid-map MUST be a map from om\n  tempid to real ids, not idents."}, nf {:name untangled.client.impl.om-plumbing/nf, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 114, :column 1, :end-line 114, :end-column 8, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 114, :column 6, :end-line 114, :end-column 8}}, read-local {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([{:keys [query target state ast]} dkey _])), :doc "Read function for the Om parser.\n\n  *** NOTE: This function only runs when it is called without a target -- it is not triggered for remote reads. To\n  trigger a remote read, use the `untangled/data-fetch` namespace. ***\n\n  Returns the current locale when reading the :ui/locale keyword. Otherwise pulls data out of the app-state.\n  "}, :name untangled.client.impl.om-plumbing/read-local, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 17, :method-params ([p__39446 dkey _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [query target state ast]} dkey _])), :doc "Read function for the Om parser.\n\n  *** NOTE: This function only runs when it is called without a target -- it is not triggered for remote reads. To\n  trigger a remote read, use the `untangled/data-fetch` namespace. ***\n\n  Returns the current locale when reading the :ui/locale keyword. Otherwise pulls data out of the app-state.\n  "}, mark-missing {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 173, :column 7, :end-line 173, :end-column 19, :arglists (quote ([result query])), :doc "Walk the query and response, marking anything that was asked for in the query but is not in the response a missing. The\n  merge process (see application.cljs definition of merge for the reconciler) looks for these markers and overwrites existing data when they appear.\n  Returns the result with missing markers in place."}, :name untangled.client.impl.om-plumbing/mark-missing, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 19, :method-params ([result query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 2, :fn-var true, :arglists (quote ([result query])), :doc "Walk the query and response, marking anything that was asked for in the query but is not in the response a missing. The\n  merge process (see application.cljs definition of merge for the reconciler) looks for these markers and overwrites existing data when they appear.\n  Returns the result with missing markers in place."}, resolve-tempids {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 57, :column 7, :end-line 57, :end-column 22, :arglists (quote ([state tid->rid]))}, :name untangled.client.impl.om-plumbing/resolve-tempids, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 22, :method-params ([state tid->rid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state tid->rid]))}, walk {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 116, :column 7, :end-line 116, :end-column 11, :arglists (quote ([inner outer form]))}, :name untangled.client.impl.om-plumbing/walk, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 11, :method-params ([inner outer form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 3, :fn-var true, :arglists (quote ([inner outer form]))}, write-entry-point {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 37, :column 7, :end-line 37, :end-column 24, :arglists (quote ([env k params]))}, :name untangled.client.impl.om-plumbing/write-entry-point, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 24, :method-params ([env k params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([env k params]))}, fallback-query {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 83, :column 7, :end-line 83, :end-column 21, :arglists (quote ([query resp]))}, :name untangled.client.impl.om-plumbing/fallback-query, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 21, :method-params ([query resp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query resp]))}, is-ui-query-fragment? {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 97, :column 8, :end-line 97, :end-column 29, :private true, :arglists (quote ([kw]))}, :private true, :name untangled.client.impl.om-plumbing/is-ui-query-fragment?, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 29, :method-params ([kw]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([kw]))}, has-remote-query? {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 13, :column 7, :end-line 13, :end-column 24, :arglists (quote ([ast]))}, :name untangled.client.impl.om-plumbing/has-remote-query?, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 24, :method-params ([ast]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ast]))}, prewalk {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 125, :column 7, :end-line 125, :end-column 14, :arglists (quote ([f form]))}, :name untangled.client.impl.om-plumbing/prewalk, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 14, :method-params ([f form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f form]))}, strip-ui {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 100, :column 7, :end-line 100, :end-column 15, :arglists (quote ([query])), :doc "Returns a new query with fragments beginning with `ui` removed."}, :name untangled.client.impl.om-plumbing/strip-ui, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 15, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query])), :doc "Returns a new query with fragments beginning with `ui` removed."}, recursive? {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 131, :column 7, :end-line 131, :end-column 17, :arglists (quote ([qf]))}, :name untangled.client.impl.om-plumbing/recursive?, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 17, :method-params ([qf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([qf]))}, remove-loads-and-fallbacks {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 73, :column 7, :end-line 73, :end-column 33, :arglists (quote ([query])), :doc "Removes all untangled/load and tx/fallback mutations from the query"}, :name untangled.client.impl.om-plumbing/remove-loads-and-fallbacks, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 33, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query])), :doc "Removes all untangled/load and tx/fallback mutations from the query"}, leaf? {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 164, :column 7, :end-line 164, :end-column 12, :arglists (quote ([data])), :doc "Returns true iff the given data is marked as a leaf in the result (according to the query). Requires pre-marking."}, :name untangled.client.impl.om-plumbing/leaf?, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 12, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :doc "Returns true iff the given data is marked as a leaf in the result (according to the query). Requires pre-marking."}, as-leaf {:protocol-inline nil, :meta {:file "/Users/peterwilkins/getting-started-video/resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :line 157, :column 7, :end-line 157, :end-column 14, :arglists (quote ([data])), :doc "Returns data with meta-data marking it as a leaf in the result."}, :name untangled.client.impl.om-plumbing/as-leaf, :variadic false, :file "resources/public/js/compiled/dev/untangled/client/impl/om_plumbing.cljs", :end-column 14, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :doc "Returns data with meta-data marking it as a leaf in the result."}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.next, om.next om.next}, :cljs.analyzer/constants {:seen #{:untangled/leaf :children :key :else :map-entry? :value :params untangled/load :ast :execute :state :... :dispatch-key :action :error :depth :target :untangled.client.impl.om-plumbing/not-found :query ... tx/fallback}, :order [:target :children :query :state :ast :key :value :else :action untangled/load tx/fallback :dispatch-key :params :execute :error :untangled.client.impl.om-plumbing/not-found :map-entry? ... :depth :... :untangled/leaf]}, :doc nil}